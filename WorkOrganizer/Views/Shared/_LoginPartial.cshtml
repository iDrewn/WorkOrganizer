@using Microsoft.AspNetCore.Identity
@using WorkOrganizer.Domain.Entities
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


    <ul class="navbar-nav">


        @if (SignInManager.IsSignedIn(User))
        {

            <form asp-controller="Dashboard" asp-action="Projects" method="get" class="form-inline my-2 my-lg-0 mr-sm-1">
                <input class="form-control mr-sm-2" type="search" name="SearchString" placeholder="Search project.." aria-label="Search">
                <button class="btn btn-outline-light my-2 my-sm-0 mr-sm-5" type="submit">Search</button>
            </form>



            <li class="nav-item">
                <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@User.Identity.Name</a>
            </li>
            <li class="nav-item">
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="nav-link btn btn-link text-light">Logout</button>
                </form>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        }

    </ul>
